pipeline {
    agent any
    
    tools {
        maven 'Maven 3.9.5'
        jdk 'jdk8'
    }
    
    environment {
        DOCKERHUB_API_KEY = credentials('docker-hub-credentials')
    }
    
    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Clone repository') {
            steps {
                script {
                    git url: 'https://github.com/cloudsheger/spring-petclinic-jenkins-pipeline-project.git', branch: 'main'
                }
            }
        }

        stage('Compile and Test') {
            steps {
                script {
                    sh 'mvn clean install -DskipTests=true'
                }
            }
        }
    
        stage('Build Docker image') {
            steps {
                script {
                    app = docker.build("cloudsheger/spring-petclinic-hub", "-f docker-scan/app/Dockerfile .")
                }
            }
        }
    
        stage('Test Docker image') {
            steps {
                script {
                    app.inside {
                        sh 'echo "Tests passed"'
                    }
                }
            }
        }
    
        stage('Push Docker image') {
            steps {
                script {
                    // Use withCredentials to securely access Docker Hub API key
                    withCredentials([string(credentialsId: 'docker-hub-credentials', variable: 'DOCKERHUB_API_KEY')]) {
                        docker.withRegistry('https://registry.hub.docker.com', 'DOCKERHUB_API_KEY') {
                            app.push("${env.BUILD_NUMBER}")
                            app.push("latest")
                        }
                    }
                }
            }
        }
        
        stage('Clean up') {
            steps {
                script {
                    sh 'docker system prune -af'
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}
